[tox]
distshare={homedir}/.tox/distshare
envlist={py27,py34}-static_check,doc_check,testrail_id_check,pytest_fixtures
skipsdist=True

[tox:jenkins]
toxworkdir={homedir}/.tox-{env:JOB_NAME}
recreate=True


[flake8]
filename=*.py
ignore = E731,H405
exclude =  .venv,.git,.tox,dist,doc,*egg,build,releasenotes
max-complexity=25

[static_check]
deps=
    flake8<3.0.0
    hacking
commands=
    flake8 mos_tests/

[testenv]
passenv = JOB_NAME
setenv = XDG_CONFIG_HOME={envtmpdir}

[testenv:py27-static_check]
basepython =
    python2.7
deps=
    {[static_check]deps}
commands=
    {[static_check]commands}

[testenv:py34-static_check]
basepython =
    python3.4
deps=
    {[static_check]deps}
commands=
    {[static_check]commands}

[ci_checks]
deps=
    -r{toxinidir}/requirements.txt
    python-ironicclient
    python-saharaclient
    -egit+https://github.com/openstack/murano-dashboard#egg=muranodashboard
    selenium
    xvfbwrapper
    python-ceilometerclient
    python-ldap

[testenv:doc_check]
deps=
    {[ci_checks]deps}
commands=
    sphinx-build -EW -b html -d doc/_build/doctrees doc doc/_build/html

[testenv:testrail_id_check]
deps=
    {[ci_checks]deps}
commands=
    py.test mos_tests  --check-testrail-id --ignore=mos_tests/neutron/sh_tests --ignore=mos_tests/rabbitmq_oslo/test_sanity.py

[testenv:pytest_fixtures]
deps=
    {[ci_checks]deps}
commands=
    py.test mos_tests --ignore=mos_tests/murano/test_sanity.py --setup-plan

[testenv:neutron]
deps=
    -r{toxinidir}/requirements.txt
commands=
    py.test {toxinidir}/mos_tests/neutron/python_tests/test_qos.py {posargs}

[testenv:glance]
deps=
    -r{toxinidir}/requirements.txt
commands=
    py.test {toxinidir}/mos_tests/glance {posargs}

[testenv:murano-cli]
commands=
    {toxinidir}/mos_tests/murano/test_cli/run_tests.sh {posargs}

[testenv:murano]
setenv = VIRTUAL_ENV={envdir}
deps=
    -egit+https://github.com/openstack/murano-dashboard@3.0.0.0b1#egg=muranodashboard
    -r{toxinidir}/requirements.txt
    testtools
    selenium
    ipython
    xvfbwrapper
commands=
    py.test {toxinidir}/mos_tests/murano {posargs}

[testenv:murano-docker_k8s]
setenv = VIRTUAL_ENV={envdir}
passenv = MURANO_* UBUNTU_QCOW2_URL JOB_NAME
deps=
    -r{toxinidir}/requirements.txt
commands=
    py.test {toxinidir}/mos_tests/murano/test_docker_k8s {posargs}

[testenv:murano-docker]
setenv = VIRTUAL_ENV={envdir}
passenv = MURANO_* UBUNTU_QCOW2_URL JOB_NAME
deps=
    -r{toxinidir}/requirements.txt
commands=
    py.test {toxinidir}/mos_tests/murano/test_docker_k8s/docker {posargs}

[testenv:murano-k8s]
setenv = VIRTUAL_ENV={envdir}
passenv = MURANO_* UBUNTU_QCOW2_URL JOB_NAME
deps=
    -r{toxinidir}/requirements.txt
commands=
    py.test {toxinidir}/mos_tests/murano/test_docker_k8s/k8s {posargs}

[testenv:ceilometer]
deps=
    -r{toxinidir}/requirements.txt
    python-ceilometerclient
commands=
    py.test {toxinidir}/mos_tests/ceilometer {posargs} --capture=sys

[testenv:ironic]
setenv=INTERFACE_MODEL=virtio
passenv=IRONIC_IMAGE_URL IRONIC_NODES_CONFIG JOB_NAME
deps=
    -r{toxinidir}/requirements.txt
    python-ironicclient
commands=
    py.test {toxinidir}/mos_tests/ironic {posargs}

[testenv:rabbitmq_oslo]
deps=
    -r{toxinidir}/requirements.txt
commands=
    py.test {toxinidir}/mos_tests/rabbitmq_oslo {posargs}

[testenv:rabbitmq_oslo-detach]
deps=
    -r{toxinidir}/requirements.txt
commands=
    py.test {toxinidir}/mos_tests/rabbitmq_oslo/test_detached_rabbit.py {posargs}

[testenv:nova]
deps=
    -r{toxinidir}/requirements.txt
commands=
    py.test {toxinidir}/mos_tests/nova {posargs}

[testenv:windows]
deps=
    -r{toxinidir}/requirements.txt
commands=
    py.test {toxinidir}/mos_tests/windows {posargs}

[testenv:nfv]
passenv = UBUNTU_QCOW2_URL JOB_NAME
deps=
    -r{toxinidir}/requirements.txt
    git+git://github.com/openstack/fuel-devops.git@3.0.1
    psycopg2
commands=
    py.test {toxinidir}/mos_tests/nfv {posargs}

[testenv:keystone]
deps=
    -r{toxinidir}/requirements.txt
    python-ldap
commands=
    py.test {toxinidir}/mos_tests/keystone {posargs}

[testenv:object_storage]
deps=
    -r{toxinidir}/requirements.txt
    python-swiftclient
commands=
    py.test {toxinidir}/mos_tests/object_storage {posargs}

[testenv:cinder]
deps=
    -r{toxinidir}/requirements.txt
commands=
    py.test {toxinidir}/mos_tests/cinder {posargs}

[testenv:glare]
deps=
    -r{toxinidir}/requirements.txt
commands=
    py.test {toxinidir}/mos_tests/glare {posargs}

[testenv:heat]
deps=
    -r{toxinidir}/requirements.txt
commands=
    py.test {toxinidir}/mos_tests/heat {posargs}

[testenv:failover]
deps=
    -r{toxinidir}/requirements.txt
commands=
    py.test {toxinidir}/mos_tests/failover {posargs}

[testenv:fuel-ldap]
deps=
    -r{toxinidir}/requirements.txt
    python-ldap
commands=
    py.test {toxinidir}/mos_tests/keystone -m ldap {posargs}

[testenv:sahara]
deps=
    -r{toxinidir}/requirements.txt
    python-saharaclient
commands=
    py.test {toxinidir}/mos_tests/sahara {posargs}

[testenv:noop_run_fuel]
deps=
    -r{toxinidir}/requirements.txt
commands=
    py.test {toxinidir}/mos_tests/noop_run_fuel {posargs}
